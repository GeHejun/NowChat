<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ghj.rest.dao.GroupMessageUserToUserMapper">
  <resultMap id="BaseResultMap" type="com.ghj.rest.model.GroupMessageUserToUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="from_user_id" jdbcType="INTEGER" property="fromUserId" />
    <result column="from_user_name" jdbcType="VARCHAR" property="fromUserName" />
    <result column="to_user_id" jdbcType="INTEGER" property="toUserId" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="user_group_id" jdbcType="INTEGER" property="userGroupId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ghj.rest.model.GroupMessageUserToUser">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, from_user_id, from_user_name, to_user_id, `status`, send_time, user_group_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from group_message_user_to_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from group_message_user_to_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ghj.rest.model.GroupMessageUserToUser">
    insert into group_message_user_to_user (id, from_user_id, from_user_name, 
      to_user_id, `status`, send_time, 
      user_group_id, content)
    values (#{id,jdbcType=INTEGER}, #{fromUserId,jdbcType=INTEGER}, #{fromUserName,jdbcType=VARCHAR}, 
      #{toUserId,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{userGroupId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ghj.rest.model.GroupMessageUserToUser">
    insert into group_message_user_to_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="fromUserName != null">
        from_user_name,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="userGroupId != null">
        user_group_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=INTEGER},
      </if>
      <if test="fromUserName != null">
        #{fromUserName,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userGroupId != null">
        #{userGroupId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ghj.rest.model.GroupMessageUserToUser">
    update group_message_user_to_user
    <set>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=INTEGER},
      </if>
      <if test="fromUserName != null">
        from_user_name = #{fromUserName,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BIT},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userGroupId != null">
        user_group_id = #{userGroupId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ghj.rest.model.GroupMessageUserToUser">
    update group_message_user_to_user
    set from_user_id = #{fromUserId,jdbcType=INTEGER},
      from_user_name = #{fromUserName,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=BIT},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      user_group_id = #{userGroupId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ghj.rest.model.GroupMessageUserToUser">
    update group_message_user_to_user
    set from_user_id = #{fromUserId,jdbcType=INTEGER},
      from_user_name = #{fromUserName,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=BIT},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      user_group_id = #{userGroupId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>